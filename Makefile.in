# General info
SHELL       = @SHELL@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
datadir     = @datadir@
datarootdir = @datarootdir@
srcdir      = @srcdir@
VPATH       = $(srcdir)

# These may be overridden by make invocators
DESTDIR        =
GOSH           = "@GOSH@"
GAUCHE_CONFIG  = "@GAUCHE_CONFIG@"
GAUCHE_PACKAGE = "@GAUCHE_PACKAGE@"
INSTALL        = "@GAUCHE_INSTALL@" -C

# Other parameters
OPENCV_CFLAGS = @OPENCV_CFLAGS@
OPENCV_LIBS = @OPENCV_LIBS@
SOEXT  = @SOEXT@
OBJEXT = @OBJEXT@
EXEEXT = @EXEEXT@
LOCAL_PATHS = "@LOCAL_PATHS@"

# Module-specific stuff
PACKAGE   = gauche-cv-core gauche-cv-highgui

ARCHFILES = gauche_cv_core.$(SOEXT) gauche_cv_highgui.$(SOEXT)
SCMFILES  = $(srcdir)/cv.scm $(srcdir)/cv/core.scm $(srcdir)/cv/highgui.scm
HEADERS   = 

TARGET    = $(ARCHFILES)
GENERATED = 
CONFIG_GENERATED = Makefile config.cache config.log config.status \
		   configure.lineno autom4te*.cache $(PACKAGE).gpd

GAUCHE_PKGINCDIR  = "$(DESTDIR)@GAUCHE_PKGINCDIR@"
GAUCHE_PKGLIBDIR  = "$(DESTDIR)@GAUCHE_PKGLIBDIR@"
GAUCHE_PKGARCHDIR = "$(DESTDIR)@GAUCHE_PKGARCHDIR@"


GENSTUB = $(GOSH) $(srcdir)/genstub.scm

cv_SRCS = $(srcdir)/gauche_cv_core.c \
					$(srcdir)/gauceh_cv_highgui.c \
					$(srcdir)/gauche_cv_imgproc.c


cv_TYPE_HDRS = $(srcdir)/core_type.gen.h	\
							 $(srcdir)/cv_struct_pre_include.h	\

cv_STUB_TYPE_HDRS = $(srcdir)/cv_type.stub.header	\
										$(srcdir)/core_type.gen.stub.header \



cv_CORE_SRCS = $(srcdir)/gauche_cv_core.c \
							 $(srcdir)/gauche_cv_corelib.c \
							 $(srcdir)/core_type.gen.c	\

cv_HIGHGUI_SRCS = $(srcdir)/gauche_cv_highgui.c	\
									$(srcdir)/gauche_cv_highguilib.c	\

cv_IMGPROC_SRCS = $(srcdir)/gauche_cv_imgproc.c	\
									$(srcdir)/gauche_cv_imgproclib.c

all : $(TARGET)



#generate sutb -> c file
.SUFFIXES:.stub .c

.stub.c:
	$(GENSTUB) $<


##
## Make core
##

gauche_cv_corelib.c: $(cv_STUB_TYPE_HDRS)

#generate type file
core_type.gen.c core_type.gen.h core_type.gen.stub.header: $(srcdir)/cv_struct_generator.scm $(srcdir)/core_type.scm
	$(GOSH) $(srcdir)/core_type.scm

#compile core
gauche_cv_core.$(SOEXT): $(cv_CORE_SRCS) $(cv_TYPE_HDRS) $(cv_STUB_TYPE_HDRS)
	$(GAUCHE_PACKAGE) compile \
	  --local=$(LOCAL_PATHS) --verbose --cflags="$(OPENCV_CFLAGS)" --libs="$(OPENCV_LIBS)" gauche_cv_core $(cv_CORE_SRCS)


##
## Make highgui
##

#generate stub -> c file
gauche_cv_corelib.c: $(cv_STUB_TYPE_HDRS)

#compile highgui
gauche_cv_highgui.$(SOEXT): $(cv_HIGHGUI_SRCS) $(cv_TYPE_HDRS) $(cv_STUB_TYPE_HDRS)
	$(GAUCHE_PACKAGE) compile \
	  --local=$(LOCAL_PATHS) --verbose --cflags="$(OPENCV_CFLAGS)" --libs="$(OPENCV_LIBS)" gauche_cv_highgui $(cv_HIGHGUI_SRCS)

check : all
	@rm -f test.log
	$(GOSH) -I. -I$(srcdir) $(srcdir)/test.scm > test.log

install : all
	$(INSTALL) -m 444 -T $(GAUCHE_PKGINCDIR) $(HEADERS)
	$(INSTALL) -m 444 -T $(GAUCHE_PKGLIBDIR) $(SCMFILES) 
	$(INSTALL) -m 555 -T $(GAUCHE_PKGARCHDIR) $(ARCHFILES)
	$(INSTALL) -m 444 -T $(GAUCHE_PKGLIBDIR)/.packages $(PACKAGE).gpd

uninstall :
	$(INSTALL) -U $(GAUCHE_PKGINCDIR) $(HEADERS)
	$(INSTALL) -U $(GAUCHE_PKGLIBDIR) $(SCMFILES) 
	$(INSTALL) -U $(GAUCHE_PKGARCHDIR) $(ARCHFILES)
	$(INSTALL) -U $(GAUCHE_PKGLIBDIR)/.packages $(PACKAGE).gpd

clean :
	$(GAUCHE_PACKAGE) compile --clean $(cv_SRCS) $(cv_CORE_SRCS) $(cv_HIGHGUI_SRCS)
	rm -rf $(TARGET) $(GENERATED) $(stub_gen_SRCS) *~ test.log so_locations

distclean : clean
	rm -rf $(CONFIG_GENERATED)

maintainer-clean : clean
	rm -rf $(CONFIG_GENERATED) configure VERSION

